@import "./neumorph";

$symbios-small: 8vmin;

:root {
    --header-width: 8vmin;
}


@media only screen and (max-width: 600px) {
    :root {
      --header-width: 12vmin;
    }
  }

.header {
  width: calc(.9*var(--header-width));
  height: 100%;
}

// .header-cont {
//   width: calc(.9*var(--header-width));
//   height: 100%;
// }

.header, .header button {
	position: absolute;
	top: 0;
	left: 0;

	animation-name: rainbow-text;
  animation-duration: $rainbowTime;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  font-weight: 900;
}

.header-cont{
  position: absolute;
  // height: 100vh;
  height: 100%;
  transition: all $swipe-time;
  transform: translate(0,0);
}

.header-cont-slide {
  transform: translate(24vw, 0);
  @media only screen and (max-width: 600px) {
    transform: translate(20vw, 0);
  }
}

.header button {
	// z-index: 99999;
}

.symbios-svg-header {
  position: fixed;
  bottom: 0;
  left: 0;
  width: auto;
  height: var(--header-width);

  transform-origin: var(--header-width) 0px;

  transform: rotate(-90deg) translate(0, calc(var(--header-width) * -1));

  animation-name: rainbow-svg-symbios-sm-90;
  animation-duration: $rainbowTime;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

.header .social {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: auto;
  // height: calc(.9*var(--header-width));
  transform: translate(-0%, -50%);
}

.infoViewer .social{
left: 10%;
}

.social svg{
  // color: black;
  // position: absolute;
  // top: 0;
  // left: 0;
  width: 70%;
  height: 70%;
  margin-bottom: 15%;

  overflow: visible;
  // transition: all $fade-time ease-in;
  // fill: white;
  animation-name: rainbow-svg-symbios;
  animation-duration: $rainbowTime;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

// .social svg path{
//   width: 100%;
// }

// $plusSize: 7vmin;
.header .xPlus {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(.9*var(--header-width));
  height: calc(.9*var(--header-width));
  transform: translate(-10%, 10%);
}

.plus-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  overflow: visible;
  // transition: all $fade-time ease-in;
  // fill: white;
  animation-name: rainbow-fill;
  animation-duration: $rainbowTime;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

.plus-svg path {
  transform-origin: center;
  transition: .7s;
}

// $shad-amt: .18;
$plusDisp: .9;
$plusT: 2.5rem;
.plus-shad, .plus-refl {

  // animation-duration: $rainbowTime;
  // animation-timing-function: ease-in-out;
  // animation-iteration-count: infinite;
  // animation-fill-mode: none;
}

.plus-shad {
  animation-name: rainbow-fill-shad;
  }

  .plus-rot path {
transform: rotate(135deg)
  }

.plus-shad path {
  // transform: translate( calc($plusDisp*var(--header-width)), calc($plusDisp*var(--header-width))) rotate(0deg) ;
  transform: translate( $plusT, $plusT ) rotate(0deg) ;
}

.plus-rot .plus-shad path {
  // transform: translate(calc($plusDisp*var(--header-width)), calc($plusDisp*var(--header-width))) rotate(135deg) ;
  transform: translate( $plusT, $plusT  ) rotate(135deg) ;
}


.plus-refl {
  animation-name: rainbow-fill-refl;
  // transform: translate(10%, 10%);
}

.plus-refl path {
  // transform: translate( calc(-1*$plusDisp*var(--header-width)), calc(-1*$plusDisp*var(--header-width)) ) rotate(0deg) ;
  transform: translate( -$plusT, -$plusT  ) rotate(0deg) ;
}

.plus-rot .plus-refl path {
  // transform: translate( calc(-1*$plusDisp*var(--header-width)), calc(-1*$plusDisp*var(--header-width)) ) rotate(135deg) ;
  transform: translate( -$plusT, -$plusT  ) rotate(135deg) ;
}

.plus-shad , .plus-refl {
  opacity: 1;
  // filter: blur(calc($plusDisp*var(--header-width)));
  filter: blur(.12rem);
}

